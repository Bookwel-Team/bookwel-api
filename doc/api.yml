openapi: 3.0.3
info:
  version: 'latest'
  title: Bookwel-api

servers:
  - url: 'http://13.39.144.179:3000'
security:
  - BearerAuth: [ ]

paths:
  '/hello':
      get:
        tags:
          - HealthController
        operationId: checkHealth
        responses:
          200:
            description: Health controller
            content:
              text/plain:
                schema:
                  type: string
                  example: "Hello from the Bookwel Team!"

  /books:
    put:
      summary: Crupdate book
      tags:
        - Book
      security: []
      operationId: crupdateBook
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateBook"
      responses:
        200:
          description: The created book
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        '400':
          $ref: "#/components/responses/400"
        '500':
          $ref: "#/components/responses/500"
        '404':
          $ref: "#/components/responses/404"

components:
  responses:
    400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestException'
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAuthorizedException'
    404:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceNotFoundException'
    429:
      description: Too many requests to the API
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TooManyRequestsException'
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerException'

  schemas:
    Exception:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    InternalServerException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: InternalServerException
        message: Unexpected error
    BadRequestException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: BadRequestException
        message: Bad request
    NotAuthorizedException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: NotAuthorizedException
        message: Not authorized
    ResourceNotFoundException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: ResourceNotFoundException
        message: Resource of type <T> identified by <I> not found
    TooManyRequestsException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: TooManyRequestsException
        message: Too many requests
    User:
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        status:
          type: string
          enum:
            - ADMIN
            - CLIENT
    Book:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        author:
          type: string
        category:
          type: string
        file_link:
          type: string

    CreateBook:
      type: object
      properties:
        title:
          type: string
          description: The title of the book
        author:
          type: string
          description: The author of the book
        category:
          type: string
          description: The category of the book
        book:
          type: string
          format: binary
          description: The book as pdf format

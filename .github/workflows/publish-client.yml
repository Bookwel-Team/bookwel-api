name: Release version and publish Typescript client

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.GH_TOKEN_FOR_CONVENTIONAL_CHANGELOG }}

      - name: From gradle.properties to version.yml
        run: |
          cp gradle.properties version.yml
          sed -i 's/=/: /g' version.yml
          git status

      - name: Read old version file
        id: read-old-version
        uses: CumulusDS/get-yaml-paths-action@v0.1.0
        with:
          file: version.yml
          version: version

      - name: Conventional changelog
        id: conventional-ch
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GH_TOKEN_FOR_CONVENTIONAL_CHANGELOG }}
          git-message: 'release: {version}'
          release-count: '10'
          version-file: './version.yml'
          version-path: 'version'
          skip-on-empty: 'true'
          skip-version-file: 'false'
          skip-commit: 'false'

      - name: Read new version file
        id: read-new-version
        uses: CumulusDS/get-yaml-paths-action@v0.1.0
        with:
          file: version.yml
          version: version

      - name: Put correct version into GITHUB_ENV
        run: |
          if ${{ steps.conventional-ch.outputs.skipped == 'false' }}; then
            echo "semver=${{ steps.read-new-version.outputs.version }}" >> $GITHUB_ENV
          else
            echo "semver=${{ steps.read-old-version.outputs.version }}" >> $GITHUB_ENV
          fi

      - name: If version incremented then go from version.yml to gradle.properties
        if: ${{ steps.conventional-ch.outputs.skipped == 'false' }}
        run: |
          cp version.yml gradle.properties
          sed -i 's/: /=/g' gradle.properties
          rm version.yml

      - name: If version incremented then commit
        if: ${{ steps.conventional-ch.outputs.skipped == 'false' }}
        run: |
          git rm version.yml
          git add gradle.properties
          git commit --amend --no-edit
          git push -f
          # Also update tag since commit was amended
          git tag -d v${{ env.semver }}
          git tag v${{ env.semver }}
          git push --delete origin v${{ env.semver }}
          git push --tags

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Generate typescript client
        run: ./gradlew generateTsClient -Pargs=${{ env.semver }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 17.x

      - name: Publish client
        run: |
          cd build/gen-ts/
          echo '{
                  "publishConfig": {
                    "registry": "https://npm.pkg.github.com/"
                  }
                }' | jq -s '.[0] * .[1]' package.json - > package.json.tmp && mv package.json.tmp package.json
          sed -i "s/\"http:\/\/13.39.144.179:3000\"/\(import.meta.env.VITE_APP_API_URL || \"\"\)/g" base.ts
          sed -i "s/\"dependencies\"/\"peerDependencies\"/g" package.json
          sed -i '11d' tsconfig.json && sed -i "s/\"es6\",/\"ESNEXT\", \"DOM\"/g" tsconfig.json
          echo -e "\n*.ts\nnode_module\n!*.d.ts\n.idea\n.vscode\n.openapi-generator\n.openapi-generator-ignore\ngit_push.sh" >> .npmignore
          npm install
          npm run build
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_NPM_TOKEN }}" >> ~/.npmrc
          echo "@${{ vars.NPM_USERNAME }}:registry=https://npm.pkg.github.com" >> ~/.npmrc
          npm publish

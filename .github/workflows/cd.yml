name: CD

on:
  push:
    branches:
      - "dev"
      - "prod"

  workflow_dispatch:

jobs:
  build-deploy-api:
    runs-on: ubuntu-latest

    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4.1.1

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: From gradle.properties to version.yml
        run: |
          cp gradle.properties version.yml
          sed -i 's/=/: /g' version.yml

      - name: Read semantic version (needed by the docker image build)
        id: read-semver
        uses: CumulusDS/get-yaml-paths-action@v0.1.0
        with:
          file: version.yml
          version: version

      - name: Build application
        run: |
          chmod +x gradlew
          ./gradlew build -x test

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image with new tag
        env:
          DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: |
          docker build -t $DOCKER_USERNAME/bookwel-api:${{ steps.read-semver.outputs.version }} .
          echo $DOCKER_ACCESS_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin
          docker push $DOCKER_USERNAME/bookwel-api:${{ steps.read-semver.outputs.version }}

      - name: Deploy api
        run: |
          ssh -i ${{ secrets.INSTANCE_KEY }} ubuntu@${{ secrets.INSTANCE_IP }} 'bash -s' << 'EOF'
            docker stop ${{ github.ref_name }}-bookwel-api || true
            docker rm ${{ github.ref_name }}-bookwel-api || true
            docker pull ${{ vars.DOCKER_USERNAME }}/bookwel-api
            docker run -d -p 3000:8080 --name ${{ github.ref_name }}-bookwel-api ${{ vars.DOCKER_USERNAME }}/bookwel-api
          EOF


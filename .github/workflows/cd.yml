name: CD

on:
  push:
    branches:
      - "dev"
      - "prod"

  workflow_dispatch:

jobs:
  build-deploy-api:
    runs-on: ubuntu-latest

    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4.1.1

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: From gradle.properties to version.yml
        run: |
          cp gradle.properties version.yml
          sed -i 's/=/: /g' version.yml

      - name: Read semantic version (needed by the docker image build)
        id: read-semver
        uses: CumulusDS/get-yaml-paths-action@v0.1.0
        with:
          file: version.yml
          version: version

      - name: Build application
        run: |
          chmod +x gradlew
          ./gradlew build -x test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/bookwel-api:${{ github.sha }}
          build-args: |
            version=${{ steps.read-semver.outputs.version }}
            SPRING_DATASOURCE_URL=${{ secrets.DB_URL }}
            SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }}
            SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }}

      - name: Setup SSH connection
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.INSTANCE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Create .pem file
        run: openssl rsa -in ~/.ssh/id_rsa -outform pem > ~/.ssh/private_key.pem

      - name: Deploy api
        run: |
          chmod 600 ~/.ssh/private_key.pem
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/private_key.pem ubuntu@${{ secrets.INSTANCE_IP }} "\
            docker pull \${{ vars.DOCKER_USERNAME }}/bookwel-api:${{ github.sha }}; \
            docker run -d -p 3000:8080 --name \${{ github.ref_name }}-bookwel-api \${{ vars.DOCKER_USERNAME }}/bookwel-api:${{ github.sha }} -e SPRING_DATASOURCE_URL=${{ secrets.DB_URL }} -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }} -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }}"
